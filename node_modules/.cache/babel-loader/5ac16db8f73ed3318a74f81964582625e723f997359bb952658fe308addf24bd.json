{"ast":null,"code":"var _jsxFileName = \"/Users/owenpearse/Documents/TrainMap/trainmap/src/components/TransitLayer.js\";\nimport React from 'react';\nimport { GeoJSON } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransitLayer = ({\n  routesData,\n  selectedTypes\n}) => {\n  const getStyle = feature => {\n    switch (feature.properties.route_type) {\n      case 'Train':\n        return {\n          color: 'blue'\n        };\n      case 'Tram':\n        return {\n          color: 'orange'\n        };\n      case 'Bus':\n        return {\n          color: 'green'\n        };\n      default:\n        return {\n          color: 'black'\n        };\n    }\n  };\n  const filteredData = routesData.filter(route => selectedTypes.includes(route.properties.route_type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredData.map(route => /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: route,\n      style: getStyle\n    }, route.properties.route_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = TransitLayer;\nexport default TransitLayer;\nvar _c;\n$RefreshReg$(_c, \"TransitLayer\");","map":{"version":3,"names":["React","GeoJSON","jsxDEV","_jsxDEV","Fragment","_Fragment","TransitLayer","routesData","selectedTypes","getStyle","feature","properties","route_type","color","filteredData","filter","route","includes","children","map","data","style","route_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owenpearse/Documents/TrainMap/trainmap/src/components/TransitLayer.js"],"sourcesContent":["import React from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nconst TransitLayer = ({ routesData, selectedTypes }) => {\n  const getStyle = (feature) => {\n    switch (feature.properties.route_type) {\n      case 'Train':\n        return { color: 'blue' };\n      case 'Tram':\n        return { color: 'orange' };\n      case 'Bus':\n        return { color: 'green' };\n      default:\n        return { color: 'black' };\n    }\n  };\n\n  const filteredData = routesData.filter(route =>\n    selectedTypes.includes(route.properties.route_type)\n  );\n\n  return (\n    <>\n      {filteredData.map(route => (\n        <GeoJSON key={route.properties.route_id} data={route} style={getStyle} />\n      ))}\n    </>\n  );\n};\n\nexport default TransitLayer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EACtD,MAAMC,QAAQ,GAAIC,OAAO,IAAK;IAC5B,QAAQA,OAAO,CAACC,UAAU,CAACC,UAAU;MACnC,KAAK,OAAO;QACV,OAAO;UAAEC,KAAK,EAAE;QAAO,CAAC;MAC1B,KAAK,MAAM;QACT,OAAO;UAAEA,KAAK,EAAE;QAAS,CAAC;MAC5B,KAAK,KAAK;QACR,OAAO;UAAEA,KAAK,EAAE;QAAQ,CAAC;MAC3B;QACE,OAAO;UAAEA,KAAK,EAAE;QAAQ,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,YAAY,GAAGP,UAAU,CAACQ,MAAM,CAACC,KAAK,IAC1CR,aAAa,CAACS,QAAQ,CAACD,KAAK,CAACL,UAAU,CAACC,UAAU,CACpD,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGJ,YAAY,CAACK,GAAG,CAACH,KAAK,iBACrBb,OAAA,CAACF,OAAO;MAAiCmB,IAAI,EAAEJ,KAAM;MAACK,KAAK,EAAEZ;IAAS,GAAxDO,KAAK,CAACL,UAAU,CAACW,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CACzE;EAAC,gBACF,CAAC;AAEP,CAAC;AAACC,EAAA,GAzBIrB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}