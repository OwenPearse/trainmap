{"ast":null,"code":"var _jsxFileName = \"/Users/owenpearse/Documents/TrainMap/trainmap/src/components/HamburgerMenu.js\";\nimport React from 'react';\nimport ToggleSwitch from './PTTypeToggleSwitch';\nimport './HamburgerMenu.css'; // Create a separate CSS file for Menu styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = ({\n  menuOpen,\n  toggleMenu,\n  transportTypes,\n  toggleTransportType\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hamburger-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"hamburger-button\",\n      onClick: toggleMenu,\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        label: \"Trains\",\n        isChecked: transportTypes.Train,\n        onToggle: () => toggleTransportType('Train')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        label: \"Trams\",\n        isChecked: transportTypes.Tram,\n        onToggle: () => toggleTransportType('Tram')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        label: \"Buses\",\n        isChecked: transportTypes.Bus,\n        onToggle: () => toggleTransportType('Bus')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#settings\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","ToggleSwitch","jsxDEV","_jsxDEV","Menu","menuOpen","toggleMenu","transportTypes","toggleTransportType","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","href","label","isChecked","Train","onToggle","Tram","Bus","_c","$RefreshReg$"],"sources":["/Users/owenpearse/Documents/TrainMap/trainmap/src/components/HamburgerMenu.js"],"sourcesContent":["import React from 'react';\nimport ToggleSwitch from './PTTypeToggleSwitch';\nimport './HamburgerMenu.css'; // Create a separate CSS file for Menu styles\n\nconst Menu = ({ menuOpen, toggleMenu, transportTypes, toggleTransportType }) => {\n  return (\n    <div className=\"hamburger-menu\">\n      <button className=\"hamburger-button\" onClick={toggleMenu}>\n        &#9776;\n      </button>\n      {menuOpen && (\n        <div className=\"menu-content\">\n          <a href=\"#home\">Home</a>\n          <ToggleSwitch\n            label=\"Trains\"\n            isChecked={transportTypes.Train}\n            onToggle={() => toggleTransportType('Train')}\n          />\n          <ToggleSwitch\n            label=\"Trams\"\n            isChecked={transportTypes.Tram}\n            onToggle={() => toggleTransportType('Tram')}\n          />\n          <ToggleSwitch\n            label=\"Buses\"\n            isChecked={transportTypes.Bus}\n            onToggle={() => toggleTransportType('Bus')}\n          />\n          <a href=\"#settings\">Settings</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AAAoB,CAAC,KAAK;EAC9E,oBACEL,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BP,OAAA;MAAQM,SAAS,EAAC,kBAAkB;MAACE,OAAO,EAAEL,UAAW;MAAAI,QAAA,EAAC;IAE1D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRV,QAAQ,iBACPF,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BP,OAAA;QAAGa,IAAI,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxBZ,OAAA,CAACF,YAAY;QACXgB,KAAK,EAAC,QAAQ;QACdC,SAAS,EAAEX,cAAc,CAACY,KAAM;QAChCC,QAAQ,EAAEA,CAAA,KAAMZ,mBAAmB,CAAC,OAAO;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFZ,OAAA,CAACF,YAAY;QACXgB,KAAK,EAAC,OAAO;QACbC,SAAS,EAAEX,cAAc,CAACc,IAAK;QAC/BD,QAAQ,EAAEA,CAAA,KAAMZ,mBAAmB,CAAC,MAAM;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFZ,OAAA,CAACF,YAAY;QACXgB,KAAK,EAAC,OAAO;QACbC,SAAS,EAAEX,cAAc,CAACe,GAAI;QAC9BF,QAAQ,EAAEA,CAAA,KAAMZ,mBAAmB,CAAC,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFZ,OAAA;QAAGa,IAAI,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACQ,EAAA,GA7BInB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}